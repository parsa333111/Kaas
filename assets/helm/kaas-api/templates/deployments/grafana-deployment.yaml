apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: {{ .Values.general.deployNamespace }}
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Values.general.releaseName }}
    meta.helm.sh/release-namespace: {{ .Values.general.releaseNamespace }}
spec:
  replicas: {{ .Values.replicas.grafana }}
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
      - name: grafana
        image: {{ .Values.image.grafana.url }}:{{ .Values.image.grafana.tag }}
        imagePullPolicy: {{ .Values.image.grafana.pullPolicy }}
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: grafana_username
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: grafana_password
        volumeMounts:
        - name: grafana-config-volume
          mountPath: /etc/grafana/provisioning/datasources/prometheus-datasource.yml
          subPath: prometheus-datasource.yml
      volumes:
      - name: grafana-config-volume
        configMap:
          name: grafana-config
